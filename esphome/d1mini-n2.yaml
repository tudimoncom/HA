# -----------------------------------------------------------------------------
# Wemos d1 mini + MH-Z19B
#
# DATE: 2021-08-16
#
# MH-Z19B use UART on pins:
#   rx_pin: GPIO3 (D9)
#   tx_pin: GPIO1 (D10)
#
# -----------------------------------------------------------------------------

esphome:
  name: d1mini-n2
  comment: Датчик качества воздуха в спальне
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password_n2

# WiFi settings 
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret hotspot_wifi_ssid_n2
    password: !secret hotspot_wifi_password_n1

# Captive portal резервный механизм для настройки, если подключение к сконфигурированной WiFi сети не удалось
captive_portal:

# включим Web server
web_server:
  port: 80
#  auth:
#    username: admin
#    password: !secret web_server_password

# Get the time from Home Assistant to sync the onboard real-time clock.
time:
  - platform: homeassistant
    id: esptime

# СИСТЕМНЫЕ ШИНЫ

# настроим UART
uart:
  rx_pin: GPIO3 #(D9)
  tx_pin: GPIO1 #(D10)
  baud_rate: 9600

# СЕНСОРЫ
sensor:

  # MH-Z19 CO_2 and Temperature Sensor
  - platform: mhz19
    co2:
      name: "d1mini-n2 MH-Z19 CO2 Value"
    temperature:
      name: "d1mini-n2 MH-Z19 Temperature"
    update_interval: 60s
    automatic_baseline_calibration: false

  # системные сенсоры
  - platform: uptime
    name: "d1mini-n2 Uptime Sensor"
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
              
  - platform: wifi_signal
    name: "d1mini-n2 WiFi Signal"
    update_interval: 60s      

# ТЕКСТОВЫЕ СЕНСОРЫ    
text_sensor:
  
  # Версия
  - platform: version
    name: "d1mini-n2 Version"
    
  # Human readable Uptime sensor
  - platform: template
    name: "d1mini-n2 Uptime Human Readable"
    id: uptime_human
    icon: mdi:clock-start

# ПЕРЕКЛЮЧАТЕЛИ
switch:

  # программный переключатель, который позволит нам перезагрузить устройство из Home Assistant (или путем публикации вручную в MQTT или API)
  - platform: restart
    name: "d1mini-n2 restart"
    
